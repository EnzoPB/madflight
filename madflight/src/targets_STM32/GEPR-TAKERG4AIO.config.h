//==============================================================================
// Generated on: 2023-12-28 01:17:04.402589
// Generated by: _convert.py in this directory
// Source: https://github.com/betaflight/unified-targets
// Board name: TAKERG4AIO
// Manufacturer ID: GEPR
//==============================================================================
#define USE_IMU_SPI_MPU6000
#define USE_IMU_SPI_ICM42688P
#define USE_FLASH_W25Q128FV
#define USE_MAX7456

//LED:
const int HW_PIN_LED      = B07;
#define LED_ON 0 //low = on

//Battery voltage divider:
const int HW_PIN_BAT_ADC  = B02;
const int HW_PIN_BAT_CURR = B01;

//GPS: (SERIAL1)
const int HW_PIN_GPS_RX   = A10;
const int HW_PIN_GPS_TX   = A09;
HardwareSerial gps_Serial(HW_PIN_GPS_RX, HW_PIN_GPS_TX);

//RC Receiver: (SERIAL3)
const int HW_PIN_RCIN_RX  = -1;
const int HW_PIN_RCIN_TX  = B09;
HardwareSerial *rcin_Serial = new HardwareSerial(HW_PIN_RCIN_RX, HW_PIN_RCIN_TX);

//IMU:
const int HW_PIN_IMU_INT  = A04;

//I2C: (I2C1)
const int HW_PIN_I2C_SDA  = A13;
const int HW_PIN_I2C_SCL  = A14;
typedef TwoWire HW_WIRETYPE; //define the class to use for I2C
HW_WIRETYPE *i2c = &Wire; //&Wire or &Wire1

//SPI: (SPI1)
const int HW_PIN_SPI_MISO = A06;
const int HW_PIN_SPI_CS   = B00;
const int HW_PIN_SPI_SCLK = A05;
const int HW_PIN_SPI_MOSI = A07;
SPIClass *spi = &SPI;

//Outputs:
#define HW_OUT_COUNT 4
const int8_t HW_PIN_OUT[HW_OUT_COUNT] = {PA0,PA1,PA2,PA3};


/*
#==============================================================================
# BetaFlight Source file
#==============================================================================
# Betaflight / STM32G47X (SG47) 4.5.0 Feb 21 2023 / 01:24:44 (d98740b) MSP API: 1.45

#define USE_ACC
#define USE_ACC_SPI_MPU6000
#define USE_ACC_SPI_ICM42688P
#define USE_GYRO
#define USE_GYRO_SPI_MPU6000
#define USE_GYRO_SPI_ICM42688P
#define USE_FLASH
#define USE_FLASH_W25Q128FV
#define USE_MAX7456

board_name TAKERG4AIO 
manufacturer_id GEPR

# resources1
resource BEEPER 1 A15
resource MOTOR 1 A00
resource MOTOR 2 A01
resource MOTOR 3 A02
resource MOTOR 4 A03
resource LED_STRIP 1 B06
resource SERIAL_TX 1 A09
resource SERIAL_TX 2 B03
resource SERIAL_TX 3 B09
resource SERIAL_TX 4 C10
resource SERIAL_TX 11 B10
resource SERIAL_RX 1 A10
resource SERIAL_RX 2 B04
resource SERIAL_RX 4 C11
resource SERIAL_RX 11 B11
resource I2C_SCL 1 A13
resource I2C_SDA 1 A14
resource LED 1 B07
resource SPI_SCK 1 A05
resource SPI_SCK 2 B13
resource SPI_SCK 3 B03
resource SPI_MISO 1 A06
resource SPI_MISO 2 B14
resource SPI_MISO 3 B04
resource SPI_MOSI 1 A07
resource SPI_MOSI 2 B15
resource SPI_MOSI 3 B05
resource ADC_BATT 1 B02
resource ADC_CURR 1 B01
resource FLASH_CS 1 C06
resource OSD_CS 1 A08
resource GYRO_EXTI 1 A04
resource GYRO_CS 1 B00

# timer
timer A00 AF1
# pin A00: TIM2 CH1 (AF1)
timer A01 AF1
# pin A01: TIM2 CH2 (AF1)
timer A02 AF1
# pin A02: TIM2 CH3 (AF1)
timer A03 AF1
# pin A03: TIM2 CH4 (AF1)
timer B06 AF5
# pin B06: TIM8 CH1 (AF5)

# dma
dma ADC 1 1
# ADC 1: DMA1 Channel 2 Request 5
dma ADC 2 8
# ADC 2: DMA2 Channel 1 Request 36
dma TIMUP 2 0
# TIMUP 2: DMA1 Channel 1 Request 60
dma TIMUP 8 0
# TIMUP 8: DMA1 Channel 1 Request 53
dma pin A00 1
# pin A00: DMA1 Channel 2 Request 56
dma pin A01 2
# pin A01: DMA1 Channel 3 Request 57
dma pin A02 3
# pin A02: DMA1 Channel 4 Request 58
dma pin A03 4
# pin A03: DMA1 Channel 5 Request 59
dma pin B06 9
# pin B06: DMA2 Channel 2 Request 49

# feature
feature RX_SERIAL
feature TELEMETRY
feature OSD
feature AIRMODE


# master
set blackbox_device = SPIFLASH
set max7456_spi_bus = 2
set beeper_inversion = ON
set beeper_od = OFF
set current_meter = ADC
set battery_meter = ADC
set ibata_scale = 120
set flash_spi_bus = 2 
set gyro_1_bustype = SPI
set gyro_1_spibus = 1
set align_board_yaw = 45
set gyro_1_sensor_align = CW270

*/
