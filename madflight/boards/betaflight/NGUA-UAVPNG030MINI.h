/*==============================================================================
Generated on: 2023-12-28 16:40:48.510269
Generated by: betaflight_target_converter.py
Source: https://github.com/betaflight/unified-targets
Board name: UAVPNG030MINI
Manufacturer ID: NGUA

//copy this line to madflight.ino to use this flight controller (or copy/paste the whole file)
#include "boards/betaflight/NGUA-UAVPNG030MINI.h"
==============================================================================*/

#define HW_BOARD_NAME "BETAFLIGHT-NGUA-UAVPNG030MINI"
#define HW_MCU "STM32F405"

//Defines from betaflight (not all will be used by madflight, and some boards define two or more IMU/MAG/BARO - madflight does not support this)
#define USE_IMU_SPI_MPU6000

//Sensor specific setup
#define IMU_ROTATE_CW180
#define BARO_I2C_ADR 0
#define MAG_I2C_ADR 0

//LED:
const int HW_PIN_LED      = PE5;
const int HW_LED_ON       = 1; //0:low is on, 1:high is on

//IMU SPI: (SPI1)
const int HW_PIN_SPI_MISO = PA6;
const int HW_PIN_SPI_MOSI = PA7;
const int HW_PIN_SPI_SCLK = PA5;
const int HW_PIN_IMU_CS   = PA4;
const int HW_PIN_IMU_EXTI = PE0;

//BARO/MAG I2C: (I2C2)
const int HW_PIN_I2C_SDA  = PB10;
const int HW_PIN_I2C_SCL  = PB11;

//Outputs:
const int HW_OUT_COUNT    = 8;
const int HW_PIN_OUT[HW_OUT_COUNT] = {PA8,PE11,PE13,PE14,PB5,PD13,PD14,PD15};

//RC Receiver: (SERIAL3)
const int HW_PIN_RCIN_RX  = PD9;
const int HW_PIN_RCIN_TX  = PD8;

//GPS: (SERIAL1)
const int HW_PIN_GPS_RX   = PB7;
const int HW_PIN_GPS_TX   = PB6;

//Battery ADC voltage and current inputs:
const int HW_PIN_BAT_V    = PC1;
const int HW_PIN_BAT_I    = -1;

//Include Libraries
#include <Wire.h>                      //I2C communication
#include <SPI.h>                       //SPI communication
#include "src/hw_STM32/STM32_PWM.h"    //Servo and oneshot

//Bus Setup
HardwareSerial *rcin_Serial = new HardwareSerial(HW_PIN_RCIN_RX, HW_PIN_RCIN_TX);
HardwareSerial gps_Serial(HW_PIN_GPS_RX, HW_PIN_GPS_TX);
typedef TwoWire HW_WIRETYPE; //define the class to use for I2C
HW_WIRETYPE *i2c = &Wire; //&Wire or &Wire1
SPIClass *spi = &SPI;


/*
#==============================================================================
# BetaFlight Source file
#==============================================================================
# Betaflight / STM32F405 (S405) 4.2.0 Feb  2 2020 / 16:57:58 (norevision) MSP API: 1.43

#define USE_GYRO
#define USE_GYRO_SPI_MPU6000
#define USE_ACC
#define USE_ACC_SPI_MPU6000

board_name UAVPNG030MINI
manufacturer_id NGUA

# resources
resource BEEPER 1 B00
resource MOTOR 1 A08
resource MOTOR 2 E11
resource MOTOR 3 E13
resource MOTOR 4 E14
resource MOTOR 5 B05
resource MOTOR 6 D13
resource MOTOR 7 D14
resource MOTOR 8 D15
resource PPM 1 A02
resource SERIAL_TX 1 B06
resource SERIAL_TX 2 D05
resource SERIAL_TX 3 D08
resource SERIAL_TX 6 C07
resource SERIAL_RX 1 B07
resource SERIAL_RX 2 D06
resource SERIAL_RX 3 D09
resource SERIAL_RX 6 C06
resource I2C_SCL 1 B08
resource I2C_SCL 2 B10
resource I2C_SDA 1 B09
resource I2C_SDA 2 B11
resource LED 1 E05
resource LED 2 E07
resource LED 3 E06
resource SPI_SCK 1 A05
resource SPI_MISO 1 A06
resource SPI_MOSI 1 A07
resource ESCSERIAL 1 A02
resource ADC_BATT 1 C01
resource BARO_CS 1 E01
resource COMPASS_EXTI 1 E12
resource GYRO_EXTI 1 E00
resource GYRO_CS 1 A04

# timer
timer E11 AF1
# pin E11: TIM1 CH2 (AF1)
timer E13 AF1
# pin E13: TIM1 CH3 (AF1)
timer E14 AF1
# pin E14: TIM1 CH4 (AF1)
timer D13 AF2
# pin D13: TIM4 CH2 (AF2)
timer D14 AF2
# pin D14: TIM4 CH3 (AF2)
timer D15 AF2
# pin D15: TIM4 CH4 (AF2)

# dma
dma ADC 1 1
# ADC 1: DMA2 Stream 4 Channel 0
dma pin E11 0
# pin E11: DMA2 Stream 6 Channel 0
dma pin E13 0
# pin E13: DMA2 Stream 6 Channel 0
dma pin E14 0
# pin E14: DMA2 Stream 4 Channel 6
dma pin D13 0
# pin D13: DMA1 Stream 3 Channel 2
dma pin D14 0
# pin D14: DMA1 Stream 7 Channel 2

# master
set mag_bustype = I2C
set mag_i2c_device = 2
set baro_spi_device = 1
set battery_meter = ADC
set beeper_inversion = ON
set beeper_od = OFF
set system_hse_mhz = 8
set dashboard_i2c_bus = 2
set gyro_1_bustype = SPI
set gyro_1_spibus = 1
set gyro_1_sensor_align = CW180
set gyro_1_align_yaw = 1800

*/
